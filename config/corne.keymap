/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        bt_combo {
            bindings = <&to 4>;
            key-positions = <0 1 10 11>;
        };
    };

    behaviors {
        bkspc_del: bkspc_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BKSPC_DEL";
            bindings = <&kp BACKSPACE>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bt_clear: bt_clear {
            compatible = "zmk,behavior-tap-dance";
            label = "BT_CLEAR";
            #binding-cells = <0>;
            bindings = <&none>, <&none>, <&bt BT_CLR>;
        };

        shift_win: shift_win {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_WIN";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&sk LEFT_GUI>;
        };

        tab_CAD_taskMan: tab_CAD_taskMan {
            compatible = "zmk,behavior-tap-dance";
            label = "TAB_CAD_TASKMAN";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp LA(LC(DEL))>, <&kp LC(LS(ESC))>;
        };

        Mod_Layer: Mod_Layer {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_LAYER";
            bindings = <&kp>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        raise_double_home: raise_double_home {
            compatible = "zmk,behavior-tap-dance";
            label = "RAISE_DOUBLE_HOME";
            #binding-cells = <0>;
            bindings = <&to 2>, <&to 0>;
        };

        mom_or_to: mom_or_to {
            compatible = "zmk,behavior-hold-tap";
            label = "MOM_OR_TO";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        back_forward: back_forward {
            compatible = "zmk,behavior-mod-morph";
            label = "BACK_FORWARD";
            bindings = <&kp C_NEXT>, <&kp C_PREV>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Main {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp GRAVE   &kp Q  &kp W  &kp E             &kp R           &kp T        &kp Y       &kp U           &kp I         &kp O    &kp SEMI  &kp RET
&kp ESC     &kp A  &kp S  &kp D             &kp F           &kp G        &kp H       &kp J           &kp K         &kp L    &kp P     &kp SQT
&shift_win  &kp Z  &kp X  &kp C             &kp V           &kp B        &kp N       &kp M           &kp COMMA     &kp DOT  &kp FSLH  &kp TAB
                          &kp LEFT_CONTROL  &mom_or_to 1 1  &kp SPACE    &bkspc_del  &mom_or_to 2 2  &kp LEFT_ALT
            >;

            label = "Main";
        };

        Lower {
            bindings = <
&kp TAB         &kp NUMBER_1        &kp NUMBER_2     &kp NUMBER_3      &kp NUMBER_4       &kp NUMBER_5           &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8          &kp NUMBER_9           &kp NUMBER_0  &trans
&kp LEFT_ALT    &kp MINUS           &kp EQUAL        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH          &kp UNDER     &kp PLUS      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE      &none
&kp LEFT_SHIFT  &kp LC(LEFT_ARROW)  &kp LC(LS(TAB))  &kp LG(Z)         &kp LC(TAB)        &kp LC(RIGHT_ARROW)    &kp LEFT_WIN  &none         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none         &kp TAB
                                                     &kp LEFT_CONTROL  &to 0              &kp SPACE              &trans        &to 2         &kp LEFT_ALT
            >;

            label = "Lower";
        };

        Raise {
            bindings = <
&kp F1      &kp F2     &kp F3     &kp F4            &kp F5                 &kp F6           &kp F7        &kp F8              &kp F9        &kp F10       &kp F11           &kp F12
&kp ESC     &kp LG(X)  &kp LG(C)  &kp PG_UP         &kp LG(V)              &kp LG(EQUAL)    &kp LEFT      &kp DOWN            &kp UP        &kp RIGHT     &none             &back_forward
&kp LSHIFT  &none      &kp HOME   &kp PG_DN         &kp END                &kp LG(MINUS)    &kp LEFT_WIN  &kp C_MUTE          &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PLAY_PAUSE  &kp TAB
                                  &kp LEFT_CONTROL  &Mod_Layer LEFT_ALT 0  &kp SPACE        &bkspc_del    &raise_double_home  &kp LEFT_ALT
            >;

            label = "Raise";
        };

        Nav {
            bindings = <
&none       &none  &none     &kp PG_UP         &none    &none        &none         &kp C_MUTE      &kp C_PLAY_PAUSE   &kp C_MUTE       &none       &bkspc_del
&kp ESC     &none  &kp HOME  &kp PG_DN         &kp END  &none        &none         &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT  &none
&kp LSHIFT  &none  &none     &none             &none    &none        &kp LEFT_WIN  &none           &none              &none            &none       &to 4
                             &kp LEFT_CONTROL  &to 0    &kp SPACE    &kp RET       &to 0           &kp LEFT_ALT
            >;

            label = "Nav";
        };

        BT {
            label = "BT";
            bindings = <
&none       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt_clear    &kp NUMBER_7  &kp NUMBER_8     &kp NUMBER_9  &kp KP_MINUS   &kp KP_MULTIPLY  &bkspc_del
&kp ESCAPE  &none         &none         &none             &none         &none        &kp NUMBER_4  &kp NUMBER_5     &kp NUMBER_6  &kp KP_PLUS    &kp LG(L)        &kp PRINTSCREEN
&kp LSHIFT  &none         &none         &none             &none         &none        &kp NUMBER_1  &kp NUMBER_2     &kp NUMBER_3  &kp KP_DIVIDE  &none            &tab_CAD_taskMan
                                        &kp LEFT_CONTROL  &to 0         &kp SPACE    &kp RET       &kp KP_NUMBER_0  &kp LEFT_ALT
            >;
        };
    };
};
